services:
  app:
    build:
      args:
        user: myusername
        uid: 1000
      context: .
      dockerfile: dev.Dockerfile
    develop:
      watch:
        - action: sync
          path: .
          target: /var/www
    image: laravel-docker
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: app
    restart: unless-stopped
    volumes:
      - '.:/var/www'
    working_dir: /var/www
    networks:
      - laravel
    depends_on:
      - mysql
      - redis

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: mysql
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    networks:
      - laravel
    volumes:
      - 'laravel-mysql:/var/lib/mysql'
      - './.docker/mysql:/docker-entrypoint-initdb.d'
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${DB_PASSWORD}'
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    container_name: redis
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'laravel-redis:/data'
    networks:
      - laravel
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./:/var/www
      - './.docker/nginx:/etc/nginx/conf.d'
    networks:
      - laravel

networks:
  laravel:
    driver: bridge
volumes:
  laravel-mysql:
    driver: local
  laravel-redis:
    driver: local
